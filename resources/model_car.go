/*
Cars owners API

This is a REST API of the Cars owners App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// Car struct for Car
type Car struct {
	Id            int64   `json:"id"`
	CarManufactur *string `json:"car_manufactur,omitempty"`
	CarModel      *string `json:"car_model,omitempty"`
	CarModelYear  *int32  `json:"car_model_year,omitempty"`
	OwnerId       int64   `json:"owner_id"`
}

// NewCar instantiates a new Car object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCar(id int64, ownerId int64) *Car {
	this := Car{}
	this.Id = id
	this.OwnerId = ownerId
	return &this
}

// NewCarWithDefaults instantiates a new Car object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCarWithDefaults() *Car {
	this := Car{}
	return &this
}

// GetId returns the Id field value
func (o *Car) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Car) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Car) SetId(v int64) {
	o.Id = v
}

// GetCarManufactur returns the CarManufactur field value if set, zero value otherwise.
func (o *Car) GetCarManufactur() string {
	if o == nil || o.CarManufactur == nil {
		var ret string
		return ret
	}
	return *o.CarManufactur
}

// GetCarManufacturOk returns a tuple with the CarManufactur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Car) GetCarManufacturOk() (*string, bool) {
	if o == nil || o.CarManufactur == nil {
		return nil, false
	}
	return o.CarManufactur, true
}

// HasCarManufactur returns a boolean if a field has been set.
func (o *Car) HasCarManufactur() bool {
	if o != nil && o.CarManufactur != nil {
		return true
	}

	return false
}

// SetCarManufactur gets a reference to the given string and assigns it to the CarManufactur field.
func (o *Car) SetCarManufactur(v string) {
	o.CarManufactur = &v
}

// GetCarModel returns the CarModel field value if set, zero value otherwise.
func (o *Car) GetCarModel() string {
	if o == nil || o.CarModel == nil {
		var ret string
		return ret
	}
	return *o.CarModel
}

// GetCarModelOk returns a tuple with the CarModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Car) GetCarModelOk() (*string, bool) {
	if o == nil || o.CarModel == nil {
		return nil, false
	}
	return o.CarModel, true
}

// HasCarModel returns a boolean if a field has been set.
func (o *Car) HasCarModel() bool {
	if o != nil && o.CarModel != nil {
		return true
	}

	return false
}

// SetCarModel gets a reference to the given string and assigns it to the CarModel field.
func (o *Car) SetCarModel(v string) {
	o.CarModel = &v
}

// GetCarModelYear returns the CarModelYear field value if set, zero value otherwise.
func (o *Car) GetCarModelYear() int32 {
	if o == nil || o.CarModelYear == nil {
		var ret int32
		return ret
	}
	return *o.CarModelYear
}

// GetCarModelYearOk returns a tuple with the CarModelYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Car) GetCarModelYearOk() (*int32, bool) {
	if o == nil || o.CarModelYear == nil {
		return nil, false
	}
	return o.CarModelYear, true
}

// HasCarModelYear returns a boolean if a field has been set.
func (o *Car) HasCarModelYear() bool {
	if o != nil && o.CarModelYear != nil {
		return true
	}

	return false
}

// SetCarModelYear gets a reference to the given int32 and assigns it to the CarModelYear field.
func (o *Car) SetCarModelYear(v int32) {
	o.CarModelYear = &v
}

// GetOwnerId returns the OwnerId field value
func (o *Car) GetOwnerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *Car) GetOwnerIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *Car) SetOwnerId(v int64) {
	o.OwnerId = v
}

func (o Car) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.CarManufactur != nil {
		toSerialize["car_manufactur"] = o.CarManufactur
	}
	if o.CarModel != nil {
		toSerialize["car_model"] = o.CarModel
	}
	if o.CarModelYear != nil {
		toSerialize["car_model_year"] = o.CarModelYear
	}
	if true {
		toSerialize["owner_id"] = o.OwnerId
	}
	return json.Marshal(toSerialize)
}

type NullableCar struct {
	value *Car
	isSet bool
}

func (v NullableCar) Get() *Car {
	return v.value
}

func (v *NullableCar) Set(val *Car) {
	v.value = val
	v.isSet = true
}

func (v NullableCar) IsSet() bool {
	return v.isSet
}

func (v *NullableCar) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCar(val *Car) *NullableCar {
	return &NullableCar{value: val, isSet: true}
}

func (v NullableCar) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCar) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Cars owners API

This is a REST API of the Cars owners App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// Ownership struct for Ownership
type Ownership struct {
	Id            int64   `json:"id"`
	FirstName     *string `json:"first_name,omitempty"`
	LastName      *string `json:"last_name,omitempty"`
	Email         *string `json:"email,omitempty"`
	Gender        *string `json:"gender,omitempty"`
	Address       *string `json:"address,omitempty"`
	CarManufactur *string `json:"car_manufactur,omitempty"`
	CarModel      *string `json:"car_model,omitempty"`
	CarModelYear  *int32  `json:"car_model_year,omitempty"`
}

// NewOwnership instantiates a new Ownership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwnership(id int64) *Ownership {
	this := Ownership{}
	this.Id = id
	return &this
}

// NewOwnershipWithDefaults instantiates a new Ownership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnershipWithDefaults() *Ownership {
	this := Ownership{}
	return &this
}

// GetId returns the Id field value
func (o *Ownership) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Ownership) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Ownership) SetId(v int64) {
	o.Id = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Ownership) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Ownership) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Ownership) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Ownership) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Ownership) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Ownership) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Ownership) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Ownership) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Ownership) SetEmail(v string) {
	o.Email = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *Ownership) GetGender() string {
	if o == nil || o.Gender == nil {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetGenderOk() (*string, bool) {
	if o == nil || o.Gender == nil {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *Ownership) HasGender() bool {
	if o != nil && o.Gender != nil {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *Ownership) SetGender(v string) {
	o.Gender = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Ownership) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Ownership) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *Ownership) SetAddress(v string) {
	o.Address = &v
}

// GetCarManufactur returns the CarManufactur field value if set, zero value otherwise.
func (o *Ownership) GetCarManufactur() string {
	if o == nil || o.CarManufactur == nil {
		var ret string
		return ret
	}
	return *o.CarManufactur
}

// GetCarManufacturOk returns a tuple with the CarManufactur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetCarManufacturOk() (*string, bool) {
	if o == nil || o.CarManufactur == nil {
		return nil, false
	}
	return o.CarManufactur, true
}

// HasCarManufactur returns a boolean if a field has been set.
func (o *Ownership) HasCarManufactur() bool {
	if o != nil && o.CarManufactur != nil {
		return true
	}

	return false
}

// SetCarManufactur gets a reference to the given string and assigns it to the CarManufactur field.
func (o *Ownership) SetCarManufactur(v string) {
	o.CarManufactur = &v
}

// GetCarModel returns the CarModel field value if set, zero value otherwise.
func (o *Ownership) GetCarModel() string {
	if o == nil || o.CarModel == nil {
		var ret string
		return ret
	}
	return *o.CarModel
}

// GetCarModelOk returns a tuple with the CarModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetCarModelOk() (*string, bool) {
	if o == nil || o.CarModel == nil {
		return nil, false
	}
	return o.CarModel, true
}

// HasCarModel returns a boolean if a field has been set.
func (o *Ownership) HasCarModel() bool {
	if o != nil && o.CarModel != nil {
		return true
	}

	return false
}

// SetCarModel gets a reference to the given string and assigns it to the CarModel field.
func (o *Ownership) SetCarModel(v string) {
	o.CarModel = &v
}

// GetCarModelYear returns the CarModelYear field value if set, zero value otherwise.
func (o *Ownership) GetCarModelYear() int32 {
	if o == nil || o.CarModelYear == nil {
		var ret int32
		return ret
	}
	return *o.CarModelYear
}

// GetCarModelYearOk returns a tuple with the CarModelYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ownership) GetCarModelYearOk() (*int32, bool) {
	if o == nil || o.CarModelYear == nil {
		return nil, false
	}
	return o.CarModelYear, true
}

// HasCarModelYear returns a boolean if a field has been set.
func (o *Ownership) HasCarModelYear() bool {
	if o != nil && o.CarModelYear != nil {
		return true
	}

	return false
}

// SetCarModelYear gets a reference to the given int32 and assigns it to the CarModelYear field.
func (o *Ownership) SetCarModelYear(v int32) {
	o.CarModelYear = &v
}

func (o Ownership) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Gender != nil {
		toSerialize["gender"] = o.Gender
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CarManufactur != nil {
		toSerialize["car_manufactur"] = o.CarManufactur
	}
	if o.CarModel != nil {
		toSerialize["car_model"] = o.CarModel
	}
	if o.CarModelYear != nil {
		toSerialize["car_model_year"] = o.CarModelYear
	}
	return json.Marshal(toSerialize)
}

type NullableOwnership struct {
	value *Ownership
	isSet bool
}

func (v NullableOwnership) Get() *Ownership {
	return v.value
}

func (v *NullableOwnership) Set(val *Ownership) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnership) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnership(val *Ownership) *NullableOwnership {
	return &NullableOwnership{value: val, isSet: true}
}

func (v NullableOwnership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
